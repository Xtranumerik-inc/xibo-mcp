#!/bin/bash

# Xtranumerik MCP for Xibo - Installation Script
# Professional Digital Signage Management v2.0.0
# ==========================================

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
MAGENTA='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# AI Installation Mode Detection
AI_INSTALL=${AI_INSTALL:-false}
AUTH_MODE=${AUTH_MODE:-""}

# ASCII Art Logo
echo -e "${CYAN}"
cat << "EOF"
 __  ___                                           _ _    
 \\ \/ / |_ _ __ __ _ _ __  _   _ _ __ ___   ___ _ __(_) | __
  \  /| __| '__/ _` | '_ \| | | | '_ ` _ \ / _ \ '__| | |/ /
  /  \| |_| | | (_| | | | | |_| | | | | | |  __/ |  | |   < 
 /_/\_\\__|_|  \__,_|_| |_|\__,_|_| |_| |_|\___|_|  |_|_|\_\
                                                            
            MCP Server for Xibo Digital Signage
            Professional Edition v2.0.0 by Xtranumerik Inc.
            üöÄ 117 outils MCP - Contr√¥le complet de Xibo
EOF
echo -e "${NC}"

echo -e "${GREEN}========================================${NC}"
echo -e "${GREEN}  Xtranumerik MCP for Xibo - Installation v2.0${NC}"
echo -e "${GREEN}========================================${NC}\n"

echo -e "${BLUE}üöÄ Bienvenue dans l'installation du serveur MCP professionnel de Xtranumerik v2.0${NC}"
echo -e "${BLUE}   Ce serveur offre 117 outils MCP pour un contr√¥le complet de Xibo${NC}\n"

echo -e "${MAGENTA}üéØ Nouveaut√©s version 2.0:${NC}"
echo -e "   ‚Ä¢ 32 outils de base (authentification client)"
echo -e "   ‚Ä¢ 85 outils avanc√©s (authentification OAuth2 utilisateur)"
echo -e "   ‚Ä¢ Filtrage g√©ographique Qu√©bec/Montr√©al intelligent"
echo -e "   ‚Ä¢ Alertes d'urgence avec g√©o-ciblage"
echo -e "   ‚Ä¢ Menu boards dynamiques pour restaurants"
echo -e "   ‚Ä¢ Analytics et rapports avanc√©s"
echo -e "   ‚Ä¢ Automatisation et workflows professionnels"
echo -e "   ‚Ä¢ Synchronisation multi-CMS"
echo -e "   ‚Ä¢ Support bilingue fran√ßais/anglais optimis√©\n"

# ========================================
# üîê CHOIX D'AUTHENTIFICATION AU D√âBUT
# ========================================

echo -e "${CYAN}üîê Choix du Mode d'Authentification${NC}"
echo -e "${CYAN}=====================================${NC}\n"

echo -e "${YELLOW}Deux modes d'authentification disponibles:${NC}\n"

echo -e "${GREEN}üìä Mode Manuel (Authentification Client):${NC}"
echo -e "   ‚Ä¢ 32 outils de base disponibles"
echo -e "   ‚Ä¢ Gestion des √©crans, layouts, m√©dias"
echo -e "   ‚Ä¢ Campagnes et programmation"
echo -e "   ‚Ä¢ Diffusion intelligente g√©o-cibl√©e"
echo -e "   ‚Ä¢ Configuration rapide avec Client ID/Secret (2 minutes)\n"

echo -e "${GREEN}üöÄ Mode OAuth2 (Authentification Utilisateur Compl√®te):${NC}"
echo -e "   ‚Ä¢ TOUS les 117 outils disponibles"
echo -e "   ‚Ä¢ Gestion avanc√©e des utilisateurs et permissions"
echo -e "   ‚Ä¢ Analytics et rapports d√©taill√©s"
echo -e "   ‚Ä¢ Alertes d'urgence g√©o-cibl√©es"
echo -e "   ‚Ä¢ Menu boards et automatisation"
echo -e "   ‚Ä¢ Workflows professionnels"
echo -e "   ‚Ä¢ Configuration avec compte utilisateur Xibo (5 minutes)\n"

# Handle AI installation mode
if [ "$AI_INSTALL" = "true" ]; then
    echo -e "${BLUE}ü§ñ Mode AI d√©tect√© - Installation automatique${NC}"
    if [ "$AUTH_MODE" = "oauth2" ]; then
        SELECTED_AUTH="oauth2"
        echo -e "${GREEN}   Mode s√©lectionn√©: OAuth2 (Acc√®s Complet)${NC}\n"
    elif [ "$AUTH_MODE" = "manual" ]; then
        SELECTED_AUTH="manual"
        echo -e "${GREEN}   Mode s√©lectionn√©: Manuel (Fonctions de Base)${NC}\n"
    else
        SELECTED_AUTH="manual"
        echo -e "${YELLOW}   Mode par d√©faut: Manuel (sp√©cifiez AUTH_MODE=oauth2 pour OAuth2)${NC}\n"
    fi
else
    # Interactive mode
    echo -e "${YELLOW}Quel mode souhaitez-vous utiliser?${NC}"
    echo -e "   ${GREEN}1)${NC} OAuth2 - Acc√®s Complet (117 outils) ${MAGENTA}[Recommand√©]${NC}"
    echo -e "   ${GREEN}2)${NC} Manuel - Fonctions de Base (32 outils)"
    
    while true; do
        read -p "   Votre choix [1-2]: " -n 1 -r
        echo
        case $REPLY in
            1)
                SELECTED_AUTH="oauth2"
                echo -e "${GREEN}‚úÖ S√©lectionn√©: OAuth2 - Acc√®s Complet aux 117 outils${NC}\n"
                break
                ;;
            2)
                SELECTED_AUTH="manual"
                echo -e "${GREEN}‚úÖ S√©lectionn√©: Manuel - Fonctions de Base (32 outils)${NC}\n"
                break
                ;;
            *)
                echo -e "${RED}   Veuillez choisir 1 ou 2${NC}"
                ;;
        esac
    done
fi

# ========================================
# V√âRIFICATION DES PR√âREQUIS
# ========================================

# Check Node.js version
echo -e "${BLUE}üîç V√©rification des pr√©requis...${NC}"
if ! command -v node &> /dev/null; then
    echo -e "${RED}‚ùå Node.js n'est pas install√©. Veuillez installer Node.js 18+ d'abord.${NC}"
    echo -e "${YELLOW}üí° Visitez: https://nodejs.org${NC}"
    exit 1
fi

NODE_VERSION=$(node -v | cut -d'v' -f2 | cut -d'.' -f1)
if [ "$NODE_VERSION" -lt 18 ]; then
    echo -e "${RED}‚ùå Node.js version 18+ requis. Version actuelle: $(node -v)${NC}"
    echo -e "${YELLOW}üí° Visitez: https://nodejs.org${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Node.js $(node -v) d√©tect√©${NC}"

# ========================================
# INSTALLATION DES D√âPENDANCES
# ========================================

# Install dependencies
echo -e "\n${BLUE}üì¶ Installation des d√©pendances...${NC}"
if [ "$AI_INSTALL" = "true" ]; then
    npm install --silent --no-progress
else
    npm install --silent
fi

if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå Erreur lors de l'installation des d√©pendances${NC}"
    exit 1
fi

# Create necessary directories
echo -e "\n${BLUE}üìÅ Cr√©ation de la structure...${NC}"
mkdir -p dist
mkdir -p logs
mkdir -p assets
mkdir -p data/images
mkdir -p data/cache
mkdir -p data/tokens
mkdir -p docs
mkdir -p config/templates

# ========================================
# CONFIGURATION EN FONCTION DU MODE CHOISI
# ========================================

if [ "$SELECTED_AUTH" = "oauth2" ]; then
    echo -e "\n${CYAN}üîê Configuration OAuth2 Utilisateur${NC}"
    echo -e "${CYAN}Cette configuration vous donne acc√®s aux 117 outils${NC}"
    echo -e "${CYAN}Configuration directe avec votre compte utilisateur Xibo${NC}\n"
    
    # OAuth2 mode - SEULEMENT auth-user (pas de setup.js)
    if [ "$AI_INSTALL" = "true" ]; then
        echo -e "${YELLOW}Mode AI: Ex√©cutez 'npm run auth-user' apr√®s l'installation pour configurer OAuth2${NC}"
        echo -e "${YELLOW}       Le syst√®me cr√©era automatiquement la configuration .env${NC}"
    else
        echo -e "${CYAN}‚öôÔ∏è  Authentification utilisateur OAuth2...${NC}"
        echo -e "${CYAN}Le script va vous guider pour configurer votre compte utilisateur Xibo${NC}"
        echo -e "${CYAN}et cr√©er automatiquement le fichier .env avec les bonnes informations.${NC}\n"
        npm run auth-user
    fi
    
else
    # Manual mode - SEULEMENT setup.js
    echo -e "\n${BLUE}‚öôÔ∏è  Configuration Manuel (Client Credentials)${NC}"
    echo -e "${BLUE}Cette configuration vous donne acc√®s aux 32 outils de base${NC}"
    echo -e "${BLUE}Configuration avec Client ID et Client Secret${NC}\n"
    
    # Check if .env exists
    if [ -f ".env" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  Fichier .env d√©tect√©${NC}"
        if [ "$AI_INSTALL" = "true" ]; then
            echo -e "${BLUE}   Mode AI: Conservation de la configuration existante${NC}"
        else
            read -p "   Voulez-vous garder votre configuration existante? [Y/n]: " -n 1 -r
            echo
            if [[ $REPLY =~ ^[Nn]$ ]]; then
                echo -e "${BLUE}‚öôÔ∏è  Configuration interactive...${NC}"
                node scripts/setup.js
            else
                echo -e "${GREEN}‚úÖ Configuration existante conserv√©e${NC}"
            fi
        fi
    else
        # Run setup script for manual mode
        echo -e "${BLUE}‚öôÔ∏è  Lancement de l'assistant de configuration...${NC}"
        if [ "$AI_INSTALL" = "true" ]; then
            echo -e "${YELLOW}Mode AI: Veuillez configurer manuellement .env apr√®s l'installation${NC}"
            echo -e "${YELLOW}       Copiez .env.example vers .env et remplissez les valeurs${NC}"
        else
            node scripts/setup.js
        fi
    fi
fi

# ========================================
# BUILD ET VALIDATION
# ========================================

# Build TypeScript
echo -e "\n${BLUE}üî® Compilation du projet...${NC}"
npm run build

if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå Erreur lors de la compilation${NC}"
    exit 1
fi

# Validate tools
echo -e "\n${BLUE}üß™ Validation des 117 outils MCP...${NC}"
npm run validate

# ========================================
# CONFIGURATION CLAUDE DESKTOP
# ========================================

# Optional: Configure Claude Desktop
echo -e "\n${YELLOW}ü§ñ Configuration de Claude Desktop${NC}"
echo -e "${YELLOW}   (Recommand√© pour utiliser le serveur MCP)${NC}"

if [ "$AI_INSTALL" = "true" ]; then
    echo -e "${BLUE}Mode AI: Configuration Claude Desktop saut√©e (ex√©cutez 'npm run configure-claude' si n√©cessaire)${NC}"
else
    read -p "   Configurer Claude Desktop automatiquement? [Y/n]: " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Nn]$ ]]; then
        npm run configure-claude
    fi
fi

# ========================================
# MESSAGE DE SUCC√àS
# ========================================

# Success message with comprehensive information
echo -e "\n${GREEN}üéâ========================================${NC}"
echo -e "${GREEN}‚úÖ Installation Termin√©e avec Succ√®s!${NC}"
echo -e "${GREEN}========================================${NC}\n"

echo -e "${CYAN}üìä R√©sum√© de l'Installation v2.0:${NC}"
echo -e "   üè¢ Soci√©t√©: Xtranumerik Inc."
echo -e "   üì¶ Serveur MCP: Xibo Digital Signage v2.0.0"
echo -e "   üõ†Ô∏è  Outils disponibles: $(if [ "$SELECTED_AUTH" = "oauth2" ]; then echo "117 outils MCP (Acc√®s Complet)"; else echo "32 outils MCP (Fonctions de Base)"; fi)"
echo -e "   üîê Mode d'authentification: $(if [ "$SELECTED_AUTH" = "oauth2" ]; then echo "OAuth2 Utilisateur"; else echo "Client Credentials"; fi)"
echo -e "   üåç Zones g√©ographiques: Qu√©bec/Montr√©al configur√©es"
echo -e "   üéØ Fonctionnalit√© cl√©: Diffusion intelligente g√©o-cibl√©e"

echo -e "\n${BLUE}üìã Prochaines √©tapes:${NC}"
echo -e "   1. ${YELLOW}npm start${NC} - D√©marrer le serveur MCP"
echo -e "   2. Ouvrir Claude Desktop (si configur√©)"
echo -e "   3. Tester avec une commande simple"
if [ "$SELECTED_AUTH" = "manual" ]; then
    echo -e "   4. ${YELLOW}npm run auth-user${NC} - Pour passer en mode OAuth2 (117 outils)"
elif [ "$SELECTED_AUTH" = "oauth2" ] && [ "$AI_INSTALL" = "true" ]; then
    echo -e "   4. ${YELLOW}npm run auth-user${NC} - Pour finaliser la configuration OAuth2"
fi

if [ "$SELECTED_AUTH" = "oauth2" ]; then
    echo -e "\n${MAGENTA}üöÄ Acc√®s Complet Configur√© - 117 Outils Disponibles:${NC}"
    echo -e "   ‚Ä¢ 32 outils de base (√©crans, layouts, m√©dias, campagnes)"
    echo -e "   ‚Ä¢ 85 outils avanc√©s (utilisateurs, analytics, alertes, automation)"
    echo -e "   ‚Ä¢ Gestion avanc√©e utilisateurs et permissions"
    echo -e "   ‚Ä¢ Analytics et rapports d√©taill√©s"
    echo -e "   ‚Ä¢ Alertes d'urgence g√©o-cibl√©es"
    echo -e "   ‚Ä¢ Menu boards et automatisation"
    echo -e "   ‚Ä¢ Workflows et synchronisation multi-CMS"
    echo -e "   ‚Ä¢ Transitions et effets visuels professionnels"
else
    echo -e "\n${MAGENTA}üìä Fonctions de Base Configur√©es - 32 Outils:${NC}"
    echo -e "   ‚Ä¢ Gestion compl√®te des √©crans et groupes"
    echo -e "   ‚Ä¢ Cr√©ation et modification des layouts"
    echo -e "   ‚Ä¢ Upload et gestion des m√©dias"
    echo -e "   ‚Ä¢ Campagnes et programmation"
    echo -e "   ‚Ä¢ Diffusion intelligente avec filtrage g√©ographique"
    echo -e "   ‚Ä¢ Broadcasting et alertes de base"
fi

echo -e "\n${CYAN}üí° Exemples de commandes √† tester:${NC}"
echo -e '   üçÅ "Mets cette publicit√© dans tous mes √©crans sauf ceux √† Qu√©bec"'
echo -e '   üìä "Montre-moi les statistiques de diffusion de cette semaine"'
echo -e '   üìÖ "Programme cette campagne pour demain matin de 9h √† 17h"'
echo -e '   üé® "Cr√©e une mise en page avec des transitions √©l√©gantes"'
if [ "$SELECTED_AUTH" = "oauth2" ]; then
    echo -e '   üö® "Diffuse cette alerte d'\''urgence dans la r√©gion de Qu√©bec"'
    echo -e '   üçΩÔ∏è  "Cr√©e un menu board pour mon restaurant avec prix dynamiques"'
    echo -e '   ü§ñ "Configure une automatisation pour les alertes m√©t√©o"'
fi

echo -e "\n${YELLOW}üìö Documentation disponible:${NC}"
echo -e "   üìñ README.md - Guide de d√©marrage rapide"
if [ "$SELECTED_AUTH" = "oauth2" ]; then
    echo -e "   üìã docs/COMPLETE-API-REFERENCE.md - R√©f√©rence des 117 outils"
else
    echo -e "   üìù docs/API-REFERENCE.md - R√©f√©rence des 32 outils de base"
fi
echo -e "   üîß .env.example - Exemple de configuration"
echo -e "   üìä docs/DEVELOPMENT-CONTEXT.md - Contexte d√©veloppement"
echo -e "   üîê docs/OAUTH2-SETUP.md - Guide OAuth2 utilisateur"

echo -e "\n${GREEN}üçÅ Optimisations Qu√©b√©coises:${NC}"
echo -e "   üåç Filtrage g√©ographique intelligent Qu√©bec/Montr√©al"
echo -e "   üá´üá∑ Support bilingue fran√ßais/anglais natif"
echo -e "   üå®Ô∏è  Int√©gration Environnement Canada"
echo -e "   üïê Fuseau horaire EST/EDT automatique"
echo -e "   üçΩÔ∏è  Templates menus qu√©b√©cois (poutine, tourti√®re, etc.)"
echo -e "   üö® Alertes d'urgence g√©o-cibl√©es"

echo -e "\n${GREEN}üÜò Support Xtranumerik:${NC}"
echo -e "   üìß Email: support@xtranumerik.ca"
echo -e "   üåê Site: https://www.xtranumerik.ca"
echo -e "   üìû Support technique disponible"
echo -e "   üí¨ Communaut√©: GitHub Discussions"

echo -e "\n${BLUE}üöÄ Pour d√©marrer maintenant:${NC}"
echo -e "   ${YELLOW}npm start${NC}"

if [ "$AI_INSTALL" = "true" ]; then
    echo -e "\n${CYAN}ü§ñ Installation AI Mode Compl√©t√©e${NC}"
    echo -e "   Variables utilis√©es:"
    echo -e "   - AI_INSTALL=$AI_INSTALL"
    echo -e "   - AUTH_MODE=$AUTH_MODE"
    echo -e "   Mode final: $(if [ "$SELECTED_AUTH" = "oauth2" ]; then echo "OAuth2"; else echo "Manuel"; fi)"
    if [ "$SELECTED_AUTH" = "oauth2" ]; then
        echo -e "\n${YELLOW}‚ö†Ô∏è  Configuration OAuth2 requise:${NC}"
        echo -e "   Ex√©cutez: ${YELLOW}npm run auth-user${NC} pour finaliser la configuration"
    fi
fi

echo -e "\n${GREEN}Merci d'avoir choisi Xtranumerik pour vos solutions d'affichage dynamique!${NC}"
echo -e "${GREEN}Profitez de la puissance $(if [ "$SELECTED_AUTH" = "oauth2" ]; then echo "des 117 outils MCP"; else echo "des 32 outils de base"; fi) pour Xibo!${NC}\n"